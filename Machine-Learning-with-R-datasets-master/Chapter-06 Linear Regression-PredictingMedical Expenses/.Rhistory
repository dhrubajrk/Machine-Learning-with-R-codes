install.packages("ggplot2")
install.packages("dplyr")
install.packages("dplyr")
install.packages("gglpot")
install.packages("ggplot")
install.packages("caret")
install.packages("kernlab")
install.packages("kernlab")
library(caret)
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("class")
install.packages("class")
install.packages("class")
install.packages("caret")
install.packages("caret")
install.packages("mass")
install.packages("MASS")
install.packages("class")
library("car", lib.loc="~/R/win-library/3.2")
library("caret", lib.loc="~/R/win-library/3.2")
library("class", lib.loc="~/R/win-library/3.2")
library("curl", lib.loc="~/R/win-library/3.2")
library("dplyr", lib.loc="~/R/win-library/3.2")
library("kernlab", lib.loc="~/R/win-library/3.2")
library("lubridate", lib.loc="~/R/win-library/3.2")
library("NLP", lib.loc="~/R/win-library/3.2")
library("plyr", lib.loc="~/R/win-library/3.2")
detach("package:car", unload=TRUE)
detach("package:caret", unload=TRUE)
detach("package:class", unload=TRUE)
detach("package:curl", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:kernlab", unload=TRUE)
detach("package:lubridate", unload=TRUE)
detach("package:NLP", unload=TRUE)
detach("package:plyr", unload=TRUE)
install.packages("dataset")
install.packages("datasets")
library(RWeka)
install.packages("RWeka")
library(RWeka)
Sys.getenv("JAVA_HOME")
options(java.home="C:\\Program Files (x86)\\Java\\jre1.8.0_77")
install.packages("RWeka")
library(RWeka)
Sys.setenv(JAVA_HOME="C:/Program Files (x86)/Java/jre1.8.0_77")
library(RWeka)
install.packages("RWeka")
library(RWeka)
Sys.setenv(JAVA_HOME="C:/Program Files (x86)/Java/jre1.8.0_77")
R.Version()
install.packages("RWeka")
library(RWeka)
library(RWeka)
R.Version()
library(RWeka)
library(RWeka)
mushroom_oneR<-OneR(type~.,data = mushroom.data)
#get set working directory
getwd()
setwd("G:/R Study/Machine-Learning-with-R-datasets-master/Chapter-05 Rule Learner-Poisonous Mushroom")
#read data
mushroom.data<-read.csv("data/mushrooms.csv")
str(mushroom.data)
head(mushroom.data)
mushroom.data$veil_type<-NULL
#playing around
prop.table(table(mushroom.data$type))
#one-R
library(RWeka)
mushroom_oneR<-OneR(type~.,data = mushroom.data)
mushroom_oneR
mushroom_JRip<-JRip(type~.,data = mushroom.data)
mushroom_JRip
getwd()
setwd("G:/R Study/Machine-Learning-with-R-datasets-master/Chapter-06 Simple Linear Regression-Challenger shuttle")
challenger.data<-read.csv("data/challenger.csv",stringsAsFactors = F)
View(challenger.data)
cor.test(challenger.data$distress_ct,challenger.data$temperature)
b<-cov(challenger.data$distress_ct,challenger.data$temperature)/var(challenger.data$temperature)
b<-cov(challenger.data$temperature,challenger.data$distress_ct)/var(challenger.data$temperature)
View(challenger.data)
a<-mean(challenger.data$distress_ct)-b*mean(challenger.data$temperature)
cov(challenger.data$temperature,challenger.data$distress_ct)/(sd(challenger.data$distress_ct)*sd(challenger.data$temperature))
cor.test(challenger.data$temperature)
cor.test(challenger.data$temperature,challenger.data$pressure)
regression<-function(x,y)
{
x<-as.matrix(x)
x<-cbind(Intercept=1,x)
b<-solve(t(x) %*% x) %*% t(x) %*% y
print(b)
}
regression<-function(x,y)
{
x<-as.matrix(x)
x<-cbind(Intercept=1,x)
b<-solve(t(x) %*% x) %*% t(x) %*% y
colnames(b)<-"estimates"
print(b)
}
regression(challenger.data[,3],challenger.data[,2])
cor.test(challenger.data$temperature,challenger.data$pressure)
cor.test(challenger.data$distress_ct,challenger.data$temperature)
b<-cov(challenger.data$temperature,challenger.data$distress_ct)/var(challenger.data$temperature)
regression(challenger.data[,3],challenger.data[,2])
regression(challenger.data[3],challenger.data[,2])
regression(challenger.data[3],challenger.data[2])
regression(challenger.data[3],challenger.data[,2])
regression(challenger.data[c(1,3:5)],challenger.data[,2])
regression(challenger.data[,c(1,3:5)],challenger.data[,2])
challenger.data[,c(1,3:5)]
challenger.data$o_ring_ct<-NULL
regression(challenger.data[2:4],challenger.data[,1])
getwd()
setwd("G:/R Study/Machine-Learning-with-R-datasets-master/Chapter-06 Linear Regression-PredictingMedical Expenses/Cha")
setwd("G:/R Study/Machine-Learning-with-R-datasets-master/Chapter-06 Linear Regression-PredictingMedical Expenses")
insurance<-read.csv("data/insurance.csv",stringsAsFactors = F)
insurance<-read.csv("data/insurance.csv",stringsAsFactors = F)
View(insurance)
insurance<-read.csv("data/insurance.csv")
str(insurance)
summary(insurance$age)
table(insurance$sex)
cor.test(insurance[which(insurance$smoker=="yes")],charges)
cor.test(insurance[which(insurance$smoker=="yes")],insurance$charges)
cor.test(insurance$age,insurance$charges)
library(ggplot2)
ggplot(insurance,aes(charges))+geom_histogram()
summary(insurance$charges)
cor(insurance[c(age,bmi,children,charges)])
cor(insurance[c("age","bmi","children","charges")])
pairs(insurance[c("age","bmi","children","charges")])
install.packages("psych")
library("psych")
pairs.panels(insurance[c("age","bmi","children","charges")])
?pairs.panels
pairs.panels
pairs.panels(insurance[c("age","bmi","children","charges")])
insurance.model<-lm(charges~age+sex+bmi+children+smoker+region,data = insurance)
insurance.model
insurance.model<-lm(charges~.,data = insurance)
insurance.model
View(insurance)
summary(insurance.model)
